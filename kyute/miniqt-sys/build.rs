use cmake::Config;
use std::env;
use std::path::PathBuf;

const QT_CORE_TYPES: &[&str] = &[
    /*"Qt::Alignment",
    "Qt::AlignmentFlag",
    "Qt::AnchorPoint",
    "Qt::ApplicationAttribute",
    "Qt::ApplicationState",
    "Qt::ApplicationStates",
    "Qt::ArrowType",
    "Qt::AspectRatioMode",
    "Qt::Axis",
    "Qt::BGMode",
    "Qt::BrushStyle",
    "Qt::CaseSensitivity",
    "Qt::CheckState",
    "Qt::ChecksumType",
    "Qt::ClipOperation",
    "Qt::ConnectionType",
    "Qt::ContextMenuPolicy",
    "Qt::CoordinateSystem",
    "Qt::Corner",
    "Qt::CursorMoveStyle",
    "Qt::CursorShape",
    "Qt::DateFormat",
    "Qt::DayOfWeek",
    "Qt::DockWidgetArea",
    "Qt::DockWidgetAreas",
    "Qt::DropAction",
    "Qt::DropActions",
    "Qt::Edge",
    "Qt::Edges",
    "Qt::EnterKeyType",
    "Qt::EventPriority",
    "Qt::FillRule",
    "Qt::FindChildOption",
    "Qt::FindChildOptions",
    "Qt::FocusPolicy",
    "Qt::FocusReason",
    "Qt::GestureFlag",
    "Qt::GestureFlags",
    "Qt::GestureState",
    "Qt::GestureType",
    "Qt::GlobalColor",
    "Qt::HANDLE",
    "Qt::HitTestAccuracy",
    "Qt::ImageConversionFlag",
    "Qt::ImageConversionFlags",
    "Qt::InputMethodHint",
    "Qt::InputMethodHints",
    "Qt::InputMethodQueries",
    "Qt::InputMethodQuery",
    "Qt::ItemDataRole",
    "Qt::ItemFlag",
    "Qt::ItemFlags",
    "Qt::ItemSelectionMode",
    "Qt::ItemSelectionOperation",
    "Qt::Key",
    "Qt::KeyboardModifier",
    "Qt::KeyboardModifiers",
    "Qt::LayoutDirection",
    "Qt::MaskMode",
    "Qt::MatchFlag",
    "Qt::MatchFlags",
    "Qt::Modifier",
    "Qt::MouseButton",
    "Qt::MouseButtons",
    "Qt::MouseEventFlag",
    "Qt::MouseEventFlags",
    "Qt::MouseEventSource",
    "Qt::NativeGestureType",
    "Qt::NavigationMode",
    "Qt::Orientation",
    "Qt::Orientations",
    "Qt::PenCapStyle",
    "Qt::PenJoinStyle",
    "Qt::PenStyle",
    "Qt::ScreenOrientation",
    "Qt::ScreenOrientations",
    "Qt::ScrollBarPolicy",
    "Qt::ScrollPhase",
    "Qt::ShortcutContext",
    "Qt::SizeHint",
    "Qt::SizeMode",
    "Qt::SortOrder",
    "Qt::TabFocusBehavior",
    "Qt::TextElideMode",
    "Qt::TextFlag",
    "Qt::TextFormat",
    "Qt::TextInteractionFlag",
    "Qt::TextInteractionFlags",
    "Qt::TileRule",
    "Qt::TimeSpec",
    "Qt::TimerType",
    "Qt::ToolBarArea",
    "Qt::ToolBarAreas",
    "Qt::ToolButtonStyle",
    "Qt::TouchPointState",
    "Qt::TouchPointStates",
    "Qt::TransformationMode",
    "Qt::UIEffect",
    "Qt::WhiteSpaceMode",
    "Qt::WidgetAttribute",
    "Qt::WindowFlags",
    "Qt::WindowFrameSection",
    "Qt::WindowModality",
    "Qt::WindowState",
    "Qt::WindowStates",
    "Qt::WindowType",*/
    "QAbstractAnimation",
    "QAbstractEventDispatcher",
    "QAbstractItemModel",
    "QAbstractListModel",
    "QAbstractNativeEventFilter",
    "QAbstractProxyModel",
    "QAbstractState",
    "QAbstractTableModel",
    "QAbstractTransition",
    "QAnimationGroup",
    "QAssociativeIterable",
    "QAtomicInt",
    "QAtomicInteger",
    "QAtomicPointer",
    "QBEInteger",
    "QBasicTimer",
    "QBitArray",
    "QBuffer",
    "QByteArray",
    "QByteArrayList",
    "QByteArrayMatcher",
    "QCache",
    "QChar",
    "QChildEvent",
    "QCollator",
    "QCollatorSortKey",
    "QCommandLineOption",
    "QCommandLineParser",
    "QContiguousCache",
    "QCoreApplication",
    "QCryptographicHash",
    "QDataStream",
    "QDate",
    "QDateTime",
    "QDeadlineTimer",
    "QDebug",
    "QDebugStateSaver",
    "QDir",
    "QDirIterator",
    "QDynamicPropertyChangeEvent",
    "QEasingCurve",
    "QElapsedTimer",
    "QEnableSharedFromThis",
    "QEvent",
    "QEventLoop",
    "QEventLoopLocker",
    "QEventTransition",
    "QException",
    "QExplicitlySharedDataPointer",
    "QFile",
    "QFileDevice",
    "QFileInfo",
    "QFileSelector",
    "QFileSystemWatcher",
    "QFinalState",
    "QFlag",
    "QFlags",
    "QFuture",
    "QFutureIterator",
    "QFutureSynchronizer",
    "QFutureWatcher",
    "QGenericArgument",
    "QGenericReturnArgument",
    "QGlobalStatic",
    "QHash",
    "QHashIterator",
    "QHistoryState",
    "QIODevice",
    "QIdentityProxyModel",
    "QItemSelection",
    "QItemSelectionModel",
    "QItemSelectionRange",
    "QJsonArray",
    "QJsonDocument",
    "QJsonObject",
    "QJsonParseError",
    "QJsonValue",
    "QKeyValueIterator",
    "QLEInteger",
    "QLatin1Char",
    "QLatin1String",
    "QLibrary",
    "QLibraryInfo",
    "QLine",
    "QLineF",
    "QLinkedList",
    "QLinkedListIterator",
    "QList",
    "QListIterator",
    "QLocale",
    "QLockFile",
    "QLoggingCategory",
    "QMap",
    "QMapIterator",
    "QMargins",
    "QMarginsF",
    "QMessageAuthenticationCode",
    "QMessageLogContext",
    "QMessageLogger",
    "QMetaClassInfo",
    "QMetaEnum",
    "QMetaMethod",
    "QMetaObject",
    "QMetaProperty",
    "QMetaType",
    "QMimeData",
    "QMimeDatabase",
    "QMimeType",
    "QModelIndex",
    "QMultiHash",
    "QMultiMap",
    "QMutableHashIterator",
    "QMutableLinkedListIterator",
    "QMutableListIterator",
    "QMutableMapIterator",
    "QMutableSetIterator",
    "QMutableVectorIterator",
    "QMutex",
    "QMutexLocker",
    "QObject",
    "QObjectCleanupHandler",
    "QOperatingSystemVersion",
    "QPair",
    "QParallelAnimationGroup",
    "QPauseAnimation",
    "QPersistentModelIndex",
    "QPluginLoader",
    "QPoint",
    "QPointF",
    "QPointer",
    "QProcess",
    "QProcessEnvironment",
    "QPropertyAnimation",
    "QQueue",
    "QRandomGenerator",
    "QRandomGenerator64",
    "QReadLocker",
    "QReadWriteLock",
    "QRect",
    "QRectF",
    "QRegExp",
    "QRegularExpression",
    "QRegularExpressionMatch",
    "QRegularExpressionMatchIterator",
    "QResource",
    "QRunnable",
    "QSaveFile",
    "QScopedArrayPointer",
    "QScopedPointer",
    "QScopedValueRollback",
    "QSemaphore",
    "QSemaphoreReleaser",
    "QSequentialAnimationGroup",
    "QSequentialIterable",
    "QSet",
    "QSetIterator",
    "QSettings",
    "QSharedData",
    "QSharedDataPointer",
    "QSharedMemory",
    "QSharedPointer",
    "QSignalBlocker",
    "QSignalTransition",
    "QSize",
    "QSizeF",
    "QSocketNotifier",
    "QSortFilterProxyModel",
    "QStack",
    "QStandardPaths",
    "QState",
    "QStateMachine",
    "QStaticByteArrayMatcher",
    "QStaticPlugin",
    "QStorageInfo",
    "QString",
    "QStringList",
    "QStringListModel",
    "QStringMatcher",
    "QStringRef",
    "QStringView",
    "QSysInfo",
    "QSystemSemaphore",
    "QTemporaryDir",
    "QTemporaryFile",
    "QTextBoundaryFinder",
    "QTextCodec",
    "QTextDecoder",
    "QTextEncoder",
    "QTextStream",
    "QThread",
    "QThreadPool",
    "QThreadStorage",
    "QTime",
    "QTimeLine",
    "QTimeZone",
    "QTimer",
    "QTimerEvent",
    "QTranslator",
    "QUnhandledException",
    "QUrl",
    "QUrlQuery",
    "QUuid",
    "QVarLengthArray",
    "QVariant",
    "QVariantAnimation",
    "QVector",
    "QVectorIterator",
    "QVersionNumber",
    "QWaitCondition",
    "QWeakPointer",
    "QWinEventNotifier",
    "QWriteLocker",
    "QXmlStreamAttribute",
    "QXmlStreamAttributes",
    "QXmlStreamEntityDeclaration",
    "QXmlStreamEntityResolver",
    "QXmlStreamNamespaceDeclaration",
    "QXmlStreamNotationDeclaration",
    "QXmlStreamReader",
    "QXmlStreamWriter",
];

const QT_GUI_TYPES: &[&str] = &[
    "QAccessible",
    "QAccessibleEditableTextInterface",
    "QAccessibleEvent",
    "QAccessibleInterface",
    "QAccessibleStateChangeEvent",
    "QAccessibleTableCellInterface",
    "QAccessibleTableModelChangeEvent",
    "QAccessibleTextCursorEvent",
    "QAccessibleTextInsertEvent",
    "QAccessibleTextInterface",
    "QAccessibleTextRemoveEvent",
    "QAccessibleTextSelectionEvent",
    "QAccessibleTextUpdateEvent",
    "QAccessibleValueChangeEvent",
    "QAccessibleValueInterface",
    "QAccessible",
    "QAccessibleObject",
    "QBitmap",
    "QIcon",
    "QIconEngine",
    "QIconEngine",
    "QIconEngine",
    "QIconEnginePlugin",
    "QImage",
    "QImageIOHandler",
    "QImageIOPlugin",
    "QImageReader",
    "QImageWriter",
    "QMovie",
    "QPicture",
    "QPixmap",
    "QPixmapCache",
    "QPixmapCache",
    "QStandardItem",
    "QStandardItemModel",
    "QClipboard",
    "QCursor",
    "QDrag",
    "QInputMethodEvent",
    "QActionEvent",
    "QCloseEvent",
    "QContextMenuEvent",
    "QDragEnterEvent",
    "QDragLeaveEvent",
    "QDragMoveEvent",
    "QDropEvent",
    "QEnterEvent",
    "QExposeEvent",
    "QFileOpenEvent",
    "QFocusEvent",
    "QHelpEvent",
    "QHideEvent",
    "QHoverEvent",
    "QIconDragEvent",
    "QInputEvent",
    "QInputMethodEvent",
    "QInputMethodQueryEvent",
    "QKeyEvent",
    "QMouseEvent",
    "QMoveEvent",
    "QNativeGestureEvent",
    "QPaintEvent",
    "QPlatformSurfaceEvent",
    "QPointingDeviceUniqueId",
    "QResizeEvent",
    "QScrollEvent",
    "QScrollPrepareEvent",
    "QShortcutEvent",
    "QShowEvent",
    "QStatusTipEvent",
    "QTabletEvent",
    "QTouchEvent",
    "QWhatsThisClickedEvent",
    "QWheelEvent",
    "QWindowStateChangeEvent",
    "QTouchEvent",
    "QGenericPlugin",
    "QGenericPluginFactory",
    "QGuiApplication",
    "QInputMethod",
    "QKeySequence",
    "QOffscreenSurface",
    "QOpenGLContext",
    "QOpenGLContextGroup",
    "QOpenGLVersionProfile",
    "QOpenGLWindow",
    "QPaintDeviceWindow",
    "QPalette",
    "QPixelFormat",
    "QRasterWindow",
    "QScreen",
    "QSessionManager",
    "QStyleHints",
    "QSurface",
    "QSurfaceFormat",
    "QTouchDevice",
    "QWindow",
    "QGenericMatrix",
    "QMatrix4x4",
    "QQuaternion",
    "QVector2D",
    "QVector3D",
    "QVector4D",
    "QOpenGLBuffer",
    "QOpenGLDebugLogger",
    "QOpenGLDebugMessage",
    "QOpenGLExtraFunctions",
    "QOpenGLFramebufferObject",
    "QOpenGLFramebufferObjectFormat",
    "QOpenGLFunctions",
    "QOpenGLFunctions_1_0",
    "QOpenGLFunctions_3_2_Core",
    "QOpenGLPaintDevice",
    "QOpenGLShader",
    "QOpenGLShaderProgram",
    "QOpenGLTexture",
    "QOpenGLTextureBlitter",
    "QOpenGLTimeMonitor",
    "QOpenGLTimerQuery",
    "QAbstractOpenGLFunctions",
    "QOpenGLVertexArrayObject",
    "QOpenGLVertexArrayObject",
    "QBackingStore",
    "QBrush",
    "QConicalGradient",
    "QGradient",
    "QLinearGradient",
    "QRadialGradient",
    "QColor",
    "QPagedPaintDevice",
    "QPageLayout",
    "QPageSize",
    "QPaintDevice",
    "QPaintEngine",
    "QPaintEngineState",
    "QTextItem",
    "QPainter",
    "QPainter",
    "QPainterPath",
    "QPainterPath",
    "QPainterPathStroker",
    "QPdfWriter",
    "QPen",
    "QPolygon",
    "QPolygonF",
    "QRegion",
    "QRgba64",
    "QTransform",
    "QAbstractTextDocumentLayout",
    "QTextObjectInterface",
    "QAbstractTextDocumentLayout",
    "QAbstractTextDocumentLayout",
    "QFont",
    "QFontDatabase",
    "QFontInfo",
    "QFontMetrics",
    "QFontMetricsF",
    "QGlyphRun",
    "QRawFont",
    "QStaticText",
    "QSyntaxHighlighter",
    "QTextCursor",
    "QTextDocument",
    "QTextDocumentFragment",
    "QTextDocumentWriter",
    "QTextBlockFormat",
    "QTextCharFormat",
    "QTextFormat",
    "QTextFrameFormat",
    "QTextImageFormat",
    "QTextLength",
    "QTextListFormat",
    "QTextTableCellFormat",
    "QTextTableFormat",
    "QTextInlineObject",
    "QTextLayout",
    "QTextLine",
    "QTextLayout",
    "QTextList",
    "QTextBlock",
    "QTextBlockGroup",
    "QTextBlockUserData",
    "QTextFragment",
    "QTextFrame",
    "QTextObject",
    "QTextBlock",
    "QTextOption",
    "QTextOption",
    "QTextTable",
    "QTextTableCell",
    "QDesktopServices",
    "QDoubleValidator",
    "QIntValidator",
    "QRegExpValidator",
    "QValidator",
    "QVulkanInstance",
    "QRasterPaintEngine",
    "QSupportedWritingSystems",
    "QOpenGLFunctions_1_1",
    "QOpenGLFunctions_1_2",
    "QOpenGLFunctions_1_3",
    "QOpenGLFunctions_1_4",
    "QOpenGLFunctions_1_5",
    "QOpenGLFunctions_2_0",
    "QOpenGLFunctions_2_1",
    "QOpenGLFunctions_3_0",
    "QOpenGLFunctions_3_1",
    "QOpenGLFunctions_3_2_Compatibility",
    "QOpenGLFunctions_3_3_Compatibility",
    "QOpenGLFunctions_3_3_Core",
    "QOpenGLFunctions_4_0_Compatibility",
    "QOpenGLFunctions_4_0_Core",
    "QOpenGLFunctions_4_1_Compatibility",
    "QOpenGLFunctions_4_1_Core",
    "QOpenGLFunctions_4_2_Compatibility",
    "QOpenGLFunctions_4_2_Core",
    "QOpenGLFunctions_4_3_Compatibility",
    "QOpenGLFunctions_4_3_Core",
    "QOpenGLFunctions_4_4_Compatibility",
    "QOpenGLFunctions_4_4_Core",
    "QOpenGLFunctions_4_5_Compatibility",
    "QOpenGLFunctions_4_5_Core",
    "QOpenGLFunctions_ES2",
    "QVulkanDeviceFunctions",
    "QVulkanFunctions",
    "QVulkanWindow",
    "QVulkanWindowRenderer",
];

const QT_WIDGETS_TYPES: &[&str] = &[
    "QAccessibleWidget",
    "QGraphicsBlurEffect",
    "QGraphicsColorizeEffect",
    "QGraphicsDropShadowEffect",
    "QGraphicsEffect",
    "QGraphicsOpacityEffect",
    "QGraphicsAnchor",
    "QGraphicsAnchorLayout",
    "QGraphicsGridLayout",
    "QAbstractGraphicsShapeItem",
    "QGraphicsEllipseItem",
    "QGraphicsItem",
    "QGraphicsItemGroup",
    "QGraphicsLineItem",
    "QGraphicsObject",
    "QGraphicsPathItem",
    "QGraphicsPixmapItem",
    "QGraphicsPolygonItem",
    "QGraphicsRectItem",
    "QGraphicsSimpleTextItem",
    "QGraphicsTextItem",
    "QGraphicsLayout",
    "QGraphicsLayoutItem",
    "QGraphicsLinearLayout",
    "QGraphicsProxyWidget",
    "QGraphicsScene",
    "QGraphicsSceneContextMenuEvent",
    "QGraphicsSceneDragDropEvent",
    "QGraphicsSceneEvent",
    "QGraphicsSceneHelpEvent",
    "QGraphicsSceneHoverEvent",
    "QGraphicsSceneMouseEvent",
    "QGraphicsSceneMoveEvent",
    "QGraphicsSceneResizeEvent",
    "QGraphicsSceneWheelEvent",
    "QGraphicsRotation",
    "QGraphicsScale",
    "QGraphicsTransform",
    "QGraphicsView",
    "QGraphicsWidget",
    "QAbstractItemDelegate",
    "QAbstractItemView",
    "QColumnView",
    "QDataWidgetMapper",
    "QFileIconProvider",
    "QHeaderView",
    "QItemDelegate",
    "QItemEditorCreator",
    "QItemEditorCreatorBase",
    "QItemEditorFactory",
    "QStandardItemEditorCreator",
    "QListView",
    "QListWidget",
    "QListWidgetItem",
    "QStyledItemDelegate",
    "QTableView",
    "QTableWidget",
    "QTableWidgetItem",
    "QTableWidgetSelectionRange",
    "QTreeView",
    "QTreeWidget",
    "QTreeWidgetItem",
    "QTreeWidgetItemIterator",
    "QAction",
    "QActionGroup",
    "QApplication",
    "QBoxLayout",
    "QHBoxLayout",
    "QVBoxLayout",
    "QFormLayout",
    "QGesture",
    "QGestureEvent",
    "QPanGesture",
    "QPinchGesture",
    "QSwipeGesture",
    "QTapAndHoldGesture",
    "QTapGesture",
    "QGestureRecognizer",
    "QGridLayout",
    "QLayout",
    "QLayoutItem",
    "QSpacerItem",
    "QWidgetItem",
    "QOpenGLWidget",
    "QShortcut",
    "QSizePolicy",
    "QStackedLayout",
    "QToolTip",
    "QWhatsThis",
    "QWidget",
    "QWidgetAction",
    "QKeyEventTransition",
    "QMouseEventTransition",
    "QCommonStyle",
    "QTileRules",
    "QProxyStyle",
    "QStyle",
    "QStyleFactory",
    "QStyleHintReturn",
    "QStyleHintReturnMask",
    "QStyleHintReturnVariant",
    "QStyleOption",
    "QStyleOptionButton",
    "QStyleOptionComboBox",
    "QStyleOptionComplex",
    "QStyleOptionDockWidget",
    "QStyleOptionFocusRect",
    "QStyleOptionFrame",
    "QStyleOptionGraphicsItem",
    "QStyleOptionGroupBox",
    "QStyleOptionHeader",
    "QStyleOptionMenuItem",
    "QStyleOptionProgressBar",
    "QStyleOptionRubberBand",
    "QStyleOptionSizeGrip",
    "QStyleOptionSlider",
    "QStyleOptionSpinBox",
    "QStyleOptionTab",
    "QStyleOptionTabBarBase",
    "QStyleOptionTabWidgetFrame",
    "QStyleOptionTitleBar",
    "QStyleOptionToolBar",
    "QStyleOptionToolBox",
    "QStyleOptionToolButton",
    "QStyleOptionViewItem",
    "QStylePainter",
    "QStylePlugin",
    "QColormap",
    "QCompleter",
    "QScroller",
    "QScrollerProperties",
    "QSystemTrayIcon",
    "QUndoGroup",
    "QUndoCommand",
    "QUndoStack",
    "QUndoView",
    "QAbstractButton",
    "QAbstractScrollArea",
    "QAbstractSlider",
    "QAbstractSpinBox",
    "QButtonGroup",
    "QCalendarWidget",
    "QCheckBox",
    "QComboBox",
    "QCommandLinkButton",
    "QDateEdit",
    "QDateTimeEdit",
    "QTimeEdit",
    "QDial",
    "QDialogButtonBox",
    "QDockWidget",
    "QFocusFrame",
    "QFontComboBox",
    "QFrame",
    "QGroupBox",
    "QKeySequenceEdit",
    "QLabel",
    "QLCDNumber",
    "QLineEdit",
    "QMainWindow",
    "QMdiArea",
    "QMdiSubWindow",
    "QMenu",
    "QMenuBar",
    "QPlainTextDocumentLayout",
    "QPlainTextEdit",
    "QProgressBar",
    "QPushButton",
    "QRadioButton",
    "QRubberBand",
    "QScrollArea",
    "QScrollBar",
    "QSizeGrip",
    "QSlider",
    "QDoubleSpinBox",
    "QSpinBox",
    "QSplashScreen",
    "QSplitter",
    "QSplitterHandle",
    "QStackedWidget",
    "QStatusBar",
    "QTabBar",
    "QTabWidget",
    "QTextBrowser",
    "QTextEdit",
    "QToolBar",
    "QToolBox",
    "QToolButton",
    "QColorDialog",
    "QDialog",
    "QErrorMessage",
    "QFileDialog",
    "QFileSystemModel",
    "QFontDialog",
    "QInputDialog",
    "QMessageBox",
    "QProgressDialog",
    "QWizard",
    "QWizardPage",
    "QMacCocoaViewContainer",
    "QMacNativeWidget",
];

const MINIQT_TYPES: &[&str] = &[
    "MQCallback",
    "MQCallback_QString",
    "MQCallback_int",
    "MQPaintEventFilter"
];

const BLACKLISTED_TYPES: &[&str] = &[
    "QMessageBox_Button"
];

const BLACKLISTED_FUNCTIONS: &[&str] = &[
    // Not ABI safe
    "QObject::.*",
];

fn main() {

    let qt5_path = env::var("QT_INSTALL_DIR").expect("QT_INSTALL_DIR not set");
    let qt5_lib_path : PathBuf = [qt5_path.as_str(), "lib"].iter().collect();
    let qt5_include: PathBuf = [qt5_path.as_str(), "include"].iter().collect();
    let qt5_include_qtcore : PathBuf = [qt5_path.as_str(), "include", "QtCore"].iter().collect();
    let qt5_include_qtgui : PathBuf = [qt5_path.as_str(), "include", "QtGui"].iter().collect();
    let qt5_include_qtwidgets : PathBuf = [qt5_path.as_str(), "include", "QtWidgets"].iter().collect();

    const OPAQUE_TYPES: &[&str] = &[
        // basically everything
        "std::.*",
        "Q[^t].*",   // keep the stuff in the Qt namespace
        //"MQ.*",
    ];

    // bindgen our functions
    let bindings = {
        let mut builder = bindgen::Builder::default();
        // The input header we would like to generate
        builder = builder
            .header("miniqt/miniqt.hpp")
            .clang_arg("-v")
            .clang_arg(format!("-I{}", qt5_include.display()))
            .clang_arg(format!("-I{}", qt5_include_qtcore.display()))
            .clang_arg(format!("-I{}", qt5_include_qtgui.display()))
            .clang_arg(format!("-I{}", qt5_include_qtwidgets.display()))
            .derive_copy(false)
            .derive_debug(false)
            .with_codegen_config(
                bindgen::CodegenConfig::TYPES
                    //| bindgen::CodegenConfig::METHODS
                    | bindgen::CodegenConfig::FUNCTIONS
                    //| bindgen::CodegenConfig::CONSTRUCTORS
                    | bindgen::CodegenConfig::VARS,
            );

        for ty in QT_WIDGETS_TYPES.iter().chain(QT_CORE_TYPES).chain(QT_GUI_TYPES).chain(MINIQT_TYPES) {
            builder = builder.whitelist_type(ty);
            builder = builder.opaque_type(ty);
            builder = builder.whitelist_function(format!("{}_.*", ty)); // additional functions
        }

        for ty in OPAQUE_TYPES {
            builder = builder.opaque_type(ty);
        }

        for ty in BLACKLISTED_TYPES {
            builder = builder.blacklist_type(ty);
        }

        // Finish the builder and generate the bindings.
        builder.generate()
    }
    // Unwrap the Result and panic on failure.
    .expect("unable to generate bindings");

    // Write the bindings to the $OUT_DIR/bindings.rs file.
    let out_path = PathBuf::from(env::var("OUT_DIR").unwrap());
    bindings
        .write_to_file(out_path.join("bindings.rs"))
        .expect("unable to write binding");

    // Add Qt
    println!("cargo:rustc-link-search=native={}", qt5_lib_path.display());
    println!("cargo:rustc-link-lib=dylib=Qt5Core");
    println!("cargo:rustc-link-lib=dylib=Qt5Gui");
    //println!("cargo:rustc-link-lib=dylib=Qt5Qml");
    //println!("cargo:rustc-link-lib=dylib=Qt5Quick");
    //println!("cargo:rustc-link-lib=dylib=Qt5Svg");
    println!("cargo:rustc-link-lib=dylib=Qt5Widgets");

    // compile miniqt
    let miniqt = Config::new("miniqt").profile("Debug").very_verbose(true).build();
    println!("cargo:rustc-link-search=native={}", miniqt.display());
    println!("cargo:rustc-link-lib=static=miniqt");
}
